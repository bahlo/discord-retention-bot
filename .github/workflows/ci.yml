name: CI

on: 
  - push

jobs:
  clippy_check:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
            override: true
      - name: Run clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
  integration:
    name: Run integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env: 
          INTEGRATION_DISCORD_TOKEN: ${{ secrets.INTEGRATION_DISCORD_TOKEN }}
        with:
          command: test
          args: -- --ignored
  build:
    name: Build binary
    runs-on: ubuntu-latest
    needs:
      - clippy_check
      - test
      - integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Make sure Cargo.lock is up to date
        run: git diff --exit-code Cargo.lock
  container:
    name: Build docker container
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags') # Run only branches (tags and main will build and publish)
    needs:
      - clippy_check
      - test
      - integration
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build docker container
        run: docker build -t docker.pkg.github.com/bahlo/discord-retention-bot/discord-retention-bot:branch .
  build_publish:
    name: Build and publish docker container
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags') # Run only on main or tags
    needs:
      - clippy_check
      - test
      - integration
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login
        run: docker login docker.pkg.github.com -u bahlo -p "${{ secrets.GITHUB_TOKEN }}"
      - name: Build and publish docker latest
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t docker.pkg.github.com/bahlo/discord-retention-bot/discord-retention-bot:latest .
          docker push docker.pkg.github.com/bahlo/discord-retention-bot/discord-retention-bot:latest
      - name: Build and publish docker tag
        if: startsWith(github.ref, 'refs/tags')
        run: |
          export TAG=$(echo "${{ github.ref }}" | sed 's/^refs\/tags\/v//g')
          docker build -t docker.pkg.github.com/bahlo/discord-retention-bot/discord-retention-bot:$TAG .
          docker push docker.pkg.github.com/bahlo/discord-retention-bot/discord-retention-bot:$TAG
  create_release_upload_assets:
    name: Create release and upload assets
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags') # Only on tags
    needs:
      - clippy_check
      - test
      - integration
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
          body: See [CHANGELOG.md](https://github.com/bahlo/discord-retention-bot/blob/main/CHANGELOG.md)
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/discord-retention-bot
          asset_name: discord-retention-bot-linux-amd64
          asset_content_type: binary
  publish_crates_io:
    name: Publish on crates.io
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags') # Only on tags
    needs:
      - clippy_check
      - test
      - integration
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - name: Run cargo login
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_IO_TOKEN }}
      - name: Run cargo publish
        uses: actions-rs/cargo@v1
        with:
          command: publish